# -*- coding: utf-8 -*-
# Generated by Django 1.11.16 on 2018-11-23 11:29
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.IntegerField(choices=[(0, '\u4e2a\u4eba'), (1, '\u4f01\u4e1a')], default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'db_table': 'user_exp',
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AthleteCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(db_index=True)),
                ('company_name', models.CharField(max_length=64)),
                ('author_rep', models.CharField(max_length=64)),
                ('credit_code', models.CharField(blank=True, max_length=128, null=True)),
                ('company_addr', models.CharField(blank=True, max_length=1024, null=True)),
                ('contact', models.CharField(max_length=64)),
                ('contact_way', models.IntegerField(choices=[(0, '\u624b\u673a'), (1, '\u56fa\u8bdd')], default=0)),
                ('context_info', models.CharField(max_length=64)),
                ('state', models.IntegerField(choices=[(0, '\u542f\u7528'), (1, '\u5220\u9664'), (2, '\u7981\u7528')], default=0)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'athlete_company',
            },
        ),
        migrations.CreateModel(
            name='AthleteInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(db_index=True)),
                ('name', models.CharField(max_length=64)),
                ('gender', models.IntegerField(choices=[(0, '\u7537'), (1, '\u5973')], default=0)),
                ('native_place', models.CharField(blank=True, max_length=255, null=True)),
                ('folk', models.CharField(blank=True, max_length=32, null=True)),
                ('birthday', models.DateTimeField(blank=True, null=True)),
                ('sport_project', models.CharField(max_length=32)),
                ('sport_level', models.IntegerField(choices=[(0, '\u7279\u7ea7'), (1, '\u4e00\u7ea7'), (2, '\u4e8c\u7ea7'), (3, '\u4e09\u7ea7'), (4, '\u56db\u7ea7'), (5, '\u4e94\u7ea7'), (6, '\u516d\u7ea7'), (7, '\u4e03\u7ea7'), (8, '\u516b\u7ea7')], default=0)),
                ('initial_training_time', models.DateTimeField(blank=True, null=True)),
                ('first_coach', models.CharField(blank=True, max_length=64, null=True)),
                ('pro_team_coach', models.CharField(blank=True, max_length=64, null=True)),
                ('nat_team_coach', models.CharField(blank=True, max_length=64, null=True)),
                ('state', models.IntegerField(choices=[(0, '\u542f\u7528'), (1, '\u5220\u9664'), (2, '\u7981\u7528')], default=0)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'athlete_info',
            },
        ),
        migrations.CreateModel(
            name='SportEventExp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(db_index=True)),
                ('event_name', models.CharField(max_length=64)),
                ('event_type', models.IntegerField(choices=[(0, '\u56fd\u5185'), (1, '\u56fd\u5916')], default=0)),
                ('event_time', models.DateTimeField(blank=True, null=True)),
                ('rank', models.CharField(max_length=64)),
                ('rank_info', models.CharField(blank=True, max_length=2048, null=True)),
                ('event_honor', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.IntegerField(choices=[(0, '\u542f\u7528'), (1, '\u5220\u9664'), (2, '\u7981\u7528')], default=0)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sport_event_exp',
            },
        ),
    ]
